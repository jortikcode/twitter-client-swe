stages:
  - test
  - build
  - deploy
image: node:latest

frontend_test: 
  stage: test
  only:
    - main
    - merge_requests
  script:
    - echo $SONAR_HOST_URL
    - cd frontend
    - npm install
    - npm run test -- --coverage
    - |
      which sonar-scanner || curl -sL https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip \
      -o sonarscanner.zip && \
      unzip sonarscanner.zip -d ~/scanner_folder && \
      echo "export PATH=\"$PATH:~/scanner_folder/sonar-scanner-4.7.0.2747-linux/bin\"" >> ~/.profile && \
      source ~/.profile
    - cd .. && ls && sonar-scanner -Dsonar.login=$SONAR_TOKEN -Dsonar.host.url=$SONAR_HOST_URL

backend_test:
  stage: test
  only:
    - main
    - merge_requests
  script:
    - cd backend
    - npm install
    - npm run test -- --coverage
    - |
      which sonar-scanner || curl -sL https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip \
      -o sonarscanner.zip && \
      unzip sonarscanner.zip -d ~/scanner_folder && \
      echo "export PATH=\"$PATH:~/scanner_folder/sonar-scanner-4.7.0.2747-linux/bin\"" >> ~/.profile && \
      source ~/.profile
    - cd .. && ls && sonar-scanner -Dsonar.login=$SONAR_TOKEN -Dsonar.host.url=$SONAR_HOST_URL

frontend_build:
  stage: build
  only:
    - main
    - merge_requests
  script:
    - cd frontend
    - npm install
    - npm run build

frontend_deploy:
  stage: deploy
  only:
    - main
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan lucia.cs.unibo.it >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

    - which rsync || ( apt-get update -y && apt-get install rsync -y )
  script:
    - cd frontend
    - npm install
    - npm run build
    - rsync -av build $UNIBO_USER@lucia.cs.unibo.it:/home/web/site212236/html/twitter-app

backend_deploy:
  stage: deploy
  only:
    - main
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan lucia.cs.unibo.it >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - which rsync || ( apt-get update -y && apt-get install rsync -y )
  script:
    - cd backend && npm install
    - rsync -av * .env .dockerignore node_modules $UNIBO_USER@lucia.cs.unibo.it:/home/web/site212236/html/twitter-app
